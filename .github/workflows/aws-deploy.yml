name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - DockerAppAWS  # This triggers the workflow on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up AWS credentials (from GitHub secrets)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1  # Replace with your AWS region if different

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 463470965515.dkr.ecr.us-east-1.amazonaws.com

      # Step 4: Define IMAGE_TAG (similar to what you had in Azure workflow)
      - name: 'Define IMAGE_TAG'
        run: echo "IMAGE_TAG=yorkville/charlie/aws-charlie1:$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV


      # Step 5: Build the Docker image with the generated tag
      - name: 'Build Docker image'
        run: |
          docker buildx build --platform linux/amd64 --no-cache -t 463470965515.dkr.ecr.us-east-1.amazonaws.com/${{ env.IMAGE_TAG }} -f Dockerfile . --load

      # Step 6: Push the Docker image to ECR
      - name: 'Push Docker image to ECR'
        run: docker push 463470965515.dkr.ecr.us-east-1.amazonaws.com/${{ env.IMAGE_TAG }}
